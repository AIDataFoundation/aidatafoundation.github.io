{"/docs/nmap/nmap/":{"data":{"":"","fingerprint-operating-system--services#fingerprint Operating system \u0026amp; Services":"NMAP - Network Mapper 1. Scanning and Enumeration scanning and enumeration are two commaon techuques for gathering information about hosrs and services on the network. scanning is techniques to survey a network for active hosts , open ports and the type of servies running on those ports enumeration is gathering detailed information about the discoveries made using scanning techniques 2. Phases of an NMAP Scan Script Pre-scanning: Optional phase that runs when requested with options like --script or -sC. It executes scripts that only need to run once per scan, such as broadcast queries to network services.\nTarget Enumeration: Nmap processes the user-provided host specifications (DNS names, IP addresses, CIDR notations) and converts them into a list of IPv4 or IPv6 addresses for scanning.\nHost Discovery: Also known as ping scanning, this phase identifies which target systems are online and worth investigating further. Nmap offers various discovery techniques from ARP requests to TCP/ICMP probes.\nReverse-DNS Resolution: Nmap looks up DNS names for online hosts to make reports more readable and potentially reveal clues about host functions.\nPort Scanning: The core Nmap operation that sends probes and analyzes responses to classify remote ports as open, closed, or filtered.\nVersion Detection: When ports are found open, Nmap can determine the server software running by sending probes and matching responses against a database of service signatures.\nOS Detection: If requested with -O, Nmap analyzes subtle differences in network implementations to identify the remote host’s operating system.\nTraceroute: An optimized implementation that can find network routes to multiple hosts in parallel using the best available probe packets.\nScript Scanning: Most NSE (Nmap Scripting Engine) scripts run during this phase, performing tasks like vulnerability detection, malware discovery, and information gathering.\nOutput: Nmap collects all gathered information and presents it in the requested format (human-readable, XML, etc.).\nScript Post-scanning: Final phase where scripts can process results and deliver reports and statistics, though currently requires user-created scripts.\n3. A Quick Note on Ports Port Basics: Ports identify specific network applications on a host. If an IP address is like an apartment complex address, ports are the individual unit numbers that direct traffic to specific applications.\nTCP Protocol: TCP is one of the most common network protocols used on the Internet. It’s essentially a language with specific rules that computers follow for communication.\n3-Way Handshake: TCP connections always begin with this essential sequence:\nClient sends SYN (synchronize) Server responds with SYN/ACK (synchronize/acknowledge) Client finalizes with ACK (acknowledge) Scanning Advantage: This predictable handshake makes TCP port scanning efficient - if a port is open, the service will respond to a connection request (SYN) following this protocol.\nNmap Application: Nmap leverages this TCP behavior during its port scanning phase to determine which ports are open, closed, or filtered on target systems.\n4. Nmap Scan Ports (-sT) Explained Full Handshake: The -sT option in Nmap performs a TCP connect scan, also known as a “full-open” or “Connect” scan.\nComplete Process: Unlike some other scan types, this scan completes the entire TCP three-way handshake sequence with target ports.\nConnection Sequence:\nClient sends SYN packet Server responds with SYN/ACK if port is open Client completes handshake with ACK Client immediately terminates the connection with RST (reset) Advantages: This scan is reliable and doesn’t require special privileges to run, making it accessible for all users.\nDisadvantages: It’s more easily detected by intrusion detection systems and firewalls because it creates full connections, and it’s typically slower than other scan types like SYN scans.\nVerify Nmap is installed or not ➜ ~ nmap Nmap 7.95 ( https://nmap.org ) Usage: nmap [Scan Type(s)] [Options] {target specification} TARGET SPECIFICATION: Can pass hostnames, IP addresses, networks, etc. Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254 -iL \u003cinputfilename\u003e: Input from list of hosts/networks -iR \u003cnum hosts\u003e: Choose random targets --exclude \u003chost1[,host2][,host3],...\u003e: Exclude hosts/networks --excludefile \u003cexclude_file\u003e: Exclude list from file HOST DISCOVERY: -sL: List Scan - simply list targets to scan -sn: Ping Scan - disable port scan -Pn: Treat all hosts as online -- skip host discovery -PS/PA/PU/PY[portlist]: TCP SYN, TCP ACK, UDP or SCTP discovery to given ports -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes -PO[protocol list]: IP Protocol Ping -n/-R: Never do DNS resolution/Always resolve [default: sometimes] --dns-servers \u003cserv1[,serv2],...\u003e: Specify custom DNS servers --system-dns: Use OS's DNS resolver --traceroute: Trace hop path to each host SCAN TECHNIQUES: -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans -sU: UDP Scan -sN/sF/sX: TCP Null, FIN, and Xmas scans --scanflags \u003cflags\u003e: Customize TCP scan flags -sI \u003czombie host[:probeport]\u003e: Idle scan -sY/sZ: SCTP INIT/COOKIE-ECHO scans -sO: IP protocol scan -b \u003cFTP relay host\u003e: FTP bounce scan PORT SPECIFICATION AND SCAN ORDER: -p \u003cport ranges\u003e: Only scan specified ports Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9 --exclude-ports \u003cport ranges\u003e: Exclude the specified ports from scanning -F: Fast mode - Scan fewer ports than the default scan -r: Scan ports sequentially - don't randomize --top-ports \u003cnumber\u003e: Scan \u003cnumber\u003e most common ports --port-ratio \u003cratio\u003e: Scan ports more common than \u003cratio\u003e SERVICE/VERSION DETECTION: -sV: Probe open ports to determine service/version info --version-intensity \u003clevel\u003e: Set from 0 (light) to 9 (try all probes) --version-light: Limit to most likely probes (intensity 2) --version-all: Try every single probe (intensity 9) --version-trace: Show detailed version scan activity (for debugging) SCRIPT SCAN: -sC: equivalent to --script=default --script=\u003cLua scripts\u003e: \u003cLua scripts\u003e is a comma separated list of directories, script-files or script-categories --script-args=\u003cn1=v1,[n2=v2,...]\u003e: provide arguments to scripts --script-args-file=filename: provide NSE script args in a file --script-trace: Show all data sent and received --script-updatedb: Update the script database. --script-help=\u003cLua scripts\u003e: Show help about scripts. \u003cLua scripts\u003e is a comma-separated list of script-files or script-categories. OS DETECTION: -O: Enable OS detection --osscan-limit: Limit OS detection to promising targets --osscan-guess: Guess OS more aggressively TIMING AND PERFORMANCE: Options which take \u003ctime\u003e are in seconds, or append 'ms' (milliseconds), 's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m). -T\u003c0-5\u003e: Set timing template (higher is faster) --min-hostgroup/max-hostgroup \u003csize\u003e: Parallel host scan group sizes --min-parallelism/max-parallelism \u003cnumprobes\u003e: Probe parallelization --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout \u003ctime\u003e: Specifies probe round trip time. --max-retries \u003ctries\u003e: Caps number of port scan probe retransmissions. --host-timeout \u003ctime\u003e: Give up on target after this long --scan-delay/--max-scan-delay \u003ctime\u003e: Adjust delay between probes --min-rate \u003cnumber\u003e: Send packets no slower than \u003cnumber\u003e per second --max-rate \u003cnumber\u003e: Send packets no faster than \u003cnumber\u003e per second FIREWALL/IDS EVASION AND SPOOFING: -f; --mtu \u003cval\u003e: fragment packets (optionally w/given MTU) -D \u003cdecoy1,decoy2[,ME],...\u003e: Cloak a scan with decoys -S \u003cIP_Address\u003e: Spoof source address -e \u003ciface\u003e: Use specified interface -g/--source-port \u003cportnum\u003e: Use given port number --proxies \u003curl1,[url2],...\u003e: Relay connections through HTTP/SOCKS4 proxies --data \u003chex string\u003e: Append a custom payload to sent packets --data-string \u003cstring\u003e: Append a custom ASCII string to sent packets --data-length \u003cnum\u003e: Append random data to sent packets --ip-options \u003coptions\u003e: Send packets with specified ip options --ttl \u003cval\u003e: Set IP time-to-live field --spoof-mac \u003cmac address/prefix/vendor name\u003e: Spoof your MAC address --badsum: Send packets with a bogus TCP/UDP/SCTP checksum OUTPUT: -oN/-oX/-oS/-oG \u003cfile\u003e: Output scan in normal, XML, s|\u003crIpt kIddi3, and Grepable format, respectively, to the given filename. -oA \u003cbasename\u003e: Output in the three major formats at once -v: Increase verbosity level (use -vv or more for greater effect) -d: Increase debugging level (use -dd or more for greater effect) --reason: Display the reason a port is in a particular state --open: Only show open (or possibly open) ports --packet-trace: Show all packets sent and received --iflist: Print host interfaces and routes (for debugging) --append-output: Append to rather than clobber specified output files --resume \u003cfilename\u003e: Resume an aborted scan --noninteractive: Disable runtime interactions via keyboard --stylesheet \u003cpath/URL\u003e: XSL stylesheet to transform XML output to HTML --webxml: Reference stylesheet from Nmap.Org for more portable XML --no-stylesheet: Prevent associating of XSL stylesheet w/XML output MISC: -6: Enable IPv6 scanning -A: Enable OS detection, version detection, script scanning, and traceroute --datadir \u003cdirname\u003e: Specify custom Nmap data file location --send-eth/--send-ip: Send using raw ethernet frames or IP packets --privileged: Assume that the user is fully privileged --unprivileged: Assume the user lacks raw socket privileges -V: Print version number -h: Print this help summary page. EXAMPLES: nmap -v -A scanme.nmap.org nmap -v -sn 192.168.0.0/16 10.0.0.0/8 nmap -v -iR 10000 -Pn -p 80 SEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES try `-sT’ option\nnmap -sT IP_ADDRESS\nLets setup basic lab using Docker\nsudo apt update \u0026\u0026 sudo apt install docker.io docker-compose create docker compose file to setup lab\nversion: '3.8' services: web-server: image: nginx:alpine container_name: web-server ports: - \"80:80\" networks: nmap-network: ipv4_address: 172.28.0.2 ftp-server: image: delfer/alpine-ftp-server container_name: ftp-server environment: - USERS=user:password:1000:1000 ports: - \"21:21\" - \"21000-21010:21000-21010\" networks: nmap-network: ipv4_address: 172.28.0.3 ssh-server: image: linuxserver/openssh-server container_name: ssh-server platform: linux/arm64/v8 environment: - PUID=1000 - PGID=1000 - TZ=Europe/London - PASSWORD_ACCESS=true - USER_PASSWORD=password - USER_NAME=user ports: - \"2222:2222\" networks: nmap-network: ipv4_address: 172.28.0.4 mysql-server: image: mariadb:latest container_name: db-server environment: - MYSQL_ROOT_PASSWORD=my-secret-pw ports: - \"3306:3306\" networks: nmap-network: ipv4_address: 172.28.0.5 networks: nmap-network: driver: bridge ipam: config: - subnet: 172.28.0.0/16 start docker container\ndocker-compose -f nmap-lab.yml up -d lets see open ports and services on docker containers\nNote \u003e\n•\t-sT: TCP connect scan. •\t-Pn: skip host discovery (assume hosts are up). •\t-p 1-65535: scan all ports. nmap -sT -Pn -p 80 172.28.0.2 # Nginx nmap -sT -Pn -p 21,21000-21010 172.28.0.3 # FTP Server nmap -sT -Pn -p 2222 172.28.0.4 # SSH Server nmap -sT -Pn -p 3306 172.28.0.5 # MySQL (MariaDB) Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 03:56 IST Nmap scan report for 172.28.0.2 Host is up. PORT STATE SERVICE 80/tcp filtered http Nmap done: 1 IP address (1 host up) scanned in 2.05 seconds Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 03:56 IST Nmap scan report for 172.28.0.3 Host is up. PORT STATE SERVICE 21/tcp filtered ftp 21000/tcp filtered irtrans 21001/tcp filtered unknown 21002/tcp filtered unknown 21003/tcp filtered unknown 21004/tcp filtered unknown 21005/tcp filtered unknown 21006/tcp filtered unknown 21007/tcp filtered unknown 21008/tcp filtered unknown 21009/tcp filtered unknown 21010/tcp filtered notezilla-lan Nmap done: 1 IP address (1 host up) scanned in 7.08 seconds Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 03:56 IST Nmap scan report for 172.28.0.4 Host is up. PORT STATE SERVICE 2222/tcp filtered EtherNetIP-1 Nmap done: 1 IP address (1 host up) scanned in 2.05 seconds Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 03:56 IST Nmap scan report for 172.28.0.5 Host is up. PORT STATE SERVICE 3306/tcp filtered mysql Nmap done: 1 IP address (1 host up) scanned in 2.04 seconds or you can simply do\nnmap -sT -Pn -p 80,21,21000-21010,2222,3306 localhost Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 03:59 IST Nmap scan report for localhost (127.0.0.1) Host is up (0.00032s latency). Other addresses for localhost (not scanned): ::1 PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 2222/tcp open EtherNetIP-1 3306/tcp open mysql 21000/tcp open irtrans 21001/tcp open unknown 21002/tcp open unknown 21003/tcp open unknown 21004/tcp open unknown 21005/tcp open unknown 21006/tcp open unknown 21007/tcp open unknown 21008/tcp open unknown 21009/tcp open unknown 21010/tcp open notezilla-lan Nmap done: 1 IP address (1 host up) scanned in 0.03 seconds This is the default scan if running Nmap without root privileges, so the following command is equivalent.\nnmap localhost Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 04:00 IST Nmap scan report for localhost (127.0.0.1) Host is up (0.000040s latency). Other addresses for localhost (not scanned): ::1 Not shown: 989 closed tcp ports (conn-refused) PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 2222/tcp open EtherNetIP-1 3306/tcp open mysql 5000/tcp open upnp 5678/tcp open rrac 7000/tcp open afs3-fileserver 9010/tcp open sdr 9080/tcp open glrpc 9100/tcp open jetdirect 49152/tcp open unknown TCP SYN Scan (-sS) – Quick recap: •\tCommon name: SYN stealth scan, “half-open” scan. •\tHandshake steps: SYN → SYN/ACK → immediate RST (reset), no final ACK. •\tWhy “half-open”? The TCP handshake is deliberately left incomplete. •\tLogging/Stealth: •\tTypically not logged by applications because connections aren’t fully established. •\tHowever, modern firewall and IDS/IPS solutions often detect and flag these “incomplete” TCP connections. •\tBenefits: •\tSpeed (much faster than full connection scans). •\tLower bandwidth (fewer packets). •\tPrivileges required: Root/administrator access.\n⸻\n🔍 How it compares (-sS vs. -sT):\n🚀 Recommended use-case:\nUse -sS scans when you: •\tWant quick results with lower network overhead. •\tPrefer application-layer stealth (though security systems might still detect it). •\tHave root privileges available.\nExample:\nsudo nmap -sS -Pn -p 80,443 target_ip\nThis scan provides a balanced mix of speed, stealth (at the application layer), and resource efficiency.\nsudo nmap -sS -Pn -p 80,443 localhost Password: Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 04:04 IST Nmap scan report for localhost (127.0.0.1) Host is up (0.000089s latency). Other addresses for localhost (not scanned): ::1 PORT STATE SERVICE 80/tcp open http 443/tcp closed https Nmap done: 1 IP address (1 host up) scanned in 0.02 seconds UDP(https://www.rfc-editor.org/rfc/rfc768.txt) Scan (-sU) most popular services on internets run ocer TCP protocol , UDP services are widelt deolyed DNS , SNMP and DHCP (rgisted port 53,161/162 and 67/68) are three of the most common\nUDP scanning is generally slower and more difficult than TCP , some security auditors ignore these ports this is a mistake as exploitable UDP services are quire common and attackers certainly don’t ignore the whole protocol. Fortunately , Nmap can help inventort UDP ports\nmap also provides some more niche scanning options, including -sA (ACK scan) which may be used to map firewalls, and -sU (UDP scan) for exploring UDP ports. However, these are used much less frequently than the half- or full-connect scans discussed above.\nNmap Port States These are the three primary port states that Nmap will report. They are defined as follows.\nOpen – the port is reachable and a service is listening on it. Closed – the port is reachable and no service is listening on it. Filtered – the port is not reachable so I cannot tell (usually indicates a firewall). Invoking our previous example, you can see one open port, one filtered port, and 998 closed ports (note that Nmap scans the top 1000 most common ports by default).\nNmap Options Deteerming which of the 1000 most common ports might have services listening on them is a good start, but what if we want to check other ports? of we want to known more about ports we have identified or the services running on them ?\nPort specification\n`-p ’ - Specifies port(s) to scan. can be a single port , a range , a comma-seprated list or ant combination of those sudo nmap -p 80,443,8080,8443 localhost looking for wev servers? Running Running nmap -p 80,443,8080,8443 is a good net to cast.\n`–top-ports ’ Select the top common ports if your starting big network and scanning the default top 1000 ports to each IP address\nRunning nmap --top-ports 50 sudo nmap --top-ports 50 localhost or\nsudo nmap -f localhost Warning: Packet fragmentation selected on a host other than Linux, OpenBSD, FreeBSD, or NetBSD. This may or may not work. Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 05:01 IST Nmap scan report for localhost (127.0.0.1) Host is up (0.000013s latency). Other addresses for localhost (not scanned): ::1 Not shown: 989 closed tcp ports (reset) PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 2222/tcp open EtherNetIP-1 3306/tcp open mysql 5000/tcp open upnp 5678/tcp open rrac 7000/tcp open afs3-fileserver 9010/tcp open sdr 9080/tcp open glrpc 9100/tcp open jetdirect 49152/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds Host Discovery -sn - Disables port-scanning (so that only host discovery is performed) sudo nmap -sn localhost Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 05:03 IST Nmap scan report for localhost (127.0.0.1) Host is up. Other addresses for localhost (not scanned): ::1 Nmap done: 1 IP address (1 host up) scanned in 0.02 seconds -Pn - Disables host discovery (treats all hosts as online ) Nmap won’t scan a target that wasn’t found in the host discovery phase. If you suspect a target is blocking Nmap’s host discovery probes, tell Nmap to skip discovery and dive straight at those ports.\nfingerprint Operating system \u0026 Services `-0’ - Detect the OS ruuning on the hosy sudo nmap -O --osscan-guess localhost Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 05:10 IST Nmap scan report for localhost (127.0.0.1) Host is up (0.00011s latency). Other addresses for localhost (not scanned): ::1 Not shown: 989 closed tcp ports (reset) PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 2222/tcp open EtherNetIP-1 3306/tcp open mysql 5000/tcp open upnp 5678/tcp open rrac 7000/tcp open afs3-fileserver 9010/tcp open sdr 9080/tcp open glrpc 9100/tcp open jetdirect 49152/tcp open unknown Device type: general purpose Running: Apple macOS 12.X OS CPE: cpe:/o:apple:mac_os_x:12 OS details: Apple macOS 12 (Monterey) (Darwin 21.1.0 - 21.6.0) Network Distance: 0 hops OS detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 1.63 seconds sV - Detect the network service and version running on a host’s open ports.\nThis provides some additional information about the host operating system, though the primary aim is to identify vulnerable services (for patching or exploiting, depending on your role)\nsudo nmap -sV localhost Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-01 05:11 IST Nmap scan report for localhost (127.0.0.1) Host is up (0.000050s latency). Other addresses for localhost (not scanned): ::1 Not shown: 989 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later 80/tcp open http nginx 1.27.4 2222/tcp open ssh OpenSSH 9.9 (protocol 2.0) 3306/tcp open mysql MariaDB 11.7.2 5000/tcp open rtsp 5678/tcp open rrac? 7000/tcp open rtsp 9010/tcp open websocket WebSocket++ 0.8.2 9080/tcp open glrpc? 9100/tcp open jetdirect? 49152/tcp open bandwidth-test MikroTik bandwidth-test server 4 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port5000-TCP:V=7.95%I=7%D=4/1%Time=67EB2828%P=arm-apple-darwin24.2.0%r( SF:GetRequest,8E,\"HTTP/1\\.1\\x20403\\x20Forbidden\\r\\nContent-Length:\\x200\\r\\ SF:nServer:\\x20AirTunes/845\\.5\\.1\\r\\nX-Apple-ProcessingTime:\\x200\\r\\nX-App SF:le-RequestReceivedTimestamp:\\x2010396788\\r\\n\\r\\n\")%r(RTSPRequest,8E,\"RT SF:SP/1\\.0\\x20403\\x20Forbidden\\r\\nContent-Length:\\x200\\r\\nServer:\\x20AirTu SF:nes/845\\.5\\.1\\r\\nX-Apple-ProcessingTime:\\x200\\r\\nX-Apple-RequestReceive SF:dTimestamp:\\x2010396793\\r\\n\\r\\n\")%r(HTTPOptions,8E,\"HTTP/1\\.1\\x20403\\x2 SF:0Forbidden\\r\\nContent-Length:\\x200\\r\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\n SF:X-Apple-ProcessingTime:\\x200\\r\\nX-Apple-RequestReceivedTimestamp:\\x2010 SF:401800\\r\\n\\r\\n\")%r(FourOhFourRequest,8E,\"HTTP/1\\.1\\x20403\\x20Forbidden\\ SF:r\\nContent-Length:\\x200\\r\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\nX-Apple-Pro SF:cessingTime:\\x200\\r\\nX-Apple-RequestReceivedTimestamp:\\x2010401803\\r\\n\\ SF:r\\n\")%r(SIPOptions,A0,\"RTSP/1\\.0\\x20403\\x20Forbidden\\r\\nContent-Length: SF:\\x200\\r\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\nCSeq:\\x2042\\x20OPTIONS\\r\\nX-A SF:pple-ProcessingTime:\\x200\\r\\nX-Apple-RequestReceivedTimestamp:\\x2010401 SF:807\\r\\n\\r\\n\"); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port5678-TCP:V=7.95%I=7%D=4/1%Time=67EB282D%P=arm-apple-darwin24.2.0%r( SF:GetRequest,8DC,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nAccept-Ranges:\\x20bytes\\r\\nCa SF:che-Control:\\x20public,\\x20max-age=86400\\r\\nLast-Modified:\\x20Mon,\\x203 SF:1\\x20Mar\\x202025\\x2022:12:04\\x20GMT\\r\\nETag:\\x20W/\\\"7b7-195ee43047b\\\"\\r SF:\\nContent-Type:\\x20text/html;\\x20charset=UTF-8\\r\\nContent-Length:\\x2019 SF:75\\r\\nVary:\\x20Accept-Encoding\\r\\nDate:\\x20Mon,\\x2031\\x20Mar\\x202025\\x2 SF:023:41:33\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u003c!DOCTYPE\\x20html\u003e\\n\u003cht SF:ml\\x20lang=\\\"en\\\"\u003e\\n\\t\u003chead\u003e\\n\\t\\t\u003cscript\\x20type=\\\"module\\\"\\x20crossor SF:igin\\x20src=\\\"/assets/polyfills-C7eMRNFe\\.js\\\"\u003e\u003c/script\u003e\\n\\n\\t\\t\u003cmeta\\x SF:20charset=\\\"utf-8\\\"\\x20/\u003e\\n\\t\\t\u003cmeta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\ SF:x20content=\\\"IE=edge\\\"\\x20/\u003e\\n\\t\\t\u003cmeta\\x20name=\\\"viewport\\\"\\x20content SF:=\\\"width=device-width,initial-scale=1\\.0\\\"\\x20/\u003e\\n\\t\\t\u003clink\\x20rel=\\\"ic SF:on\\\"\\x20href=\\\"/favicon\\.ico\\\"\\x20/\u003e\\n\\t\\t\u003cstyle\u003e@media\\x20\\(prefers-co SF:lor-scheme:\\x20dark\\)\\x20{\\x20body\\x20{\\x20background-color:\\x20rgb\\(45 SF:,\\x2046,\\x2046\\)\\x20}\\x20}\u003c/style\u003e\\n\\t\\t\u003cscript\\x20type=\\\"text/javascri SF:pt\\\"\u003e\\n\\t\\t\\twindow\\.BASE_PATH\\x20=\\x20'/';\\n\\t\\t\\twindow\\.REST_ENDPOIN SF:T\\x20=\\x20'rest';\\n\\t\\t\u003c/script\u003e\\n\\t\\t\u003cscript\\x20src=\\\"/rest/sentry\\.js SF:\\\"\u003e\u003c/script\u003e\\n\\t\\t\u003cscript\u003e!function\\(t,e\\){var\\x20o,n,\")%r(HTTPOptions, SF:183,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Policy:\\x20de SF:fault-src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nContent-Ty SF:pe:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\\r\\nVary:\\x SF:20Accept-Encoding\\r\\nDate:\\x20Mon,\\x2031\\x20Mar\\x202025\\x2023:41:33\\x20 SF:GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u003c!DOCTYPE\\x20html\u003e\\n\u003chtml\\x20lang=\\\" SF:en\\\"\u003e\\n\u003chead\u003e\\n\u003cmeta\\x20charset=\\\"utf-8\\\"\u003e\\n\u003ctitle\u003eError\u003c/title\u003e\\n\u003c/hea SF:d\u003e\\n\u003cbody\u003e\\n\u003cpre\u003eCannot\\x20OPTIONS\\x20/\u003c/pre\u003e\\n\u003c/body\u003e\\n\u003c/html\u003e\\n\")%r(R SF:TSPRequest,183,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Po SF:licy:\\x20default-src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\ SF:nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143 SF:\\r\\nVary:\\x20Accept-Encoding\\r\\nDate:\\x20Mon,\\x2031\\x20Mar\\x202025\\x202 SF:3:41:33\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u003c!DOCTYPE\\x20html\u003e\\n\u003chtml SF:\\x20lang=\\\"en\\\"\u003e\\n\u003chead\u003e\\n\u003cmeta\\x20charset=\\\"utf-8\\\"\u003e\\n\u003ctitle\u003eError\u003c/ti SF:tle\u003e\\n\u003c/head\u003e\\n\u003cbody\u003e\\n\u003cpre\u003eCannot\\x20OPTIONS\\x20/\u003c/pre\u003e\\n\u003c/body\u003e\\n\u003c/ht SF:ml\u003e\\n\"); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port7000-TCP:V=7.95%I=7%D=4/1%Time=67EB282D%P=arm-apple-darwin24.2.0%r( SF:RTSPRequest,8E,\"RTSP/1\\.0\\x20403\\x20Forbidden\\r\\nContent-Length:\\x200\\r SF:\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\nX-Apple-ProcessingTime:\\x200\\r\\nX-Ap SF:ple-RequestReceivedTimestamp:\\x2010396766\\r\\n\\r\\n\")%r(GetRequest,8E,\"HT SF:TP/1\\.1\\x20403\\x20Forbidden\\r\\nContent-Length:\\x200\\r\\nServer:\\x20AirTu SF:nes/845\\.5\\.1\\r\\nX-Apple-ProcessingTime:\\x200\\r\\nX-Apple-RequestReceive SF:dTimestamp:\\x2010401772\\r\\n\\r\\n\")%r(HTTPOptions,8E,\"HTTP/1\\.1\\x20403\\x2 SF:0Forbidden\\r\\nContent-Length:\\x200\\r\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\n SF:X-Apple-ProcessingTime:\\x200\\r\\nX-Apple-RequestReceivedTimestamp:\\x2010 SF:401780\\r\\n\\r\\n\")%r(FourOhFourRequest,8E,\"HTTP/1\\.1\\x20403\\x20Forbidden\\ SF:r\\nContent-Length:\\x200\\r\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\nX-Apple-Pro SF:cessingTime:\\x200\\r\\nX-Apple-RequestReceivedTimestamp:\\x2010401784\\r\\n\\ SF:r\\n\")%r(SIPOptions,A0,\"RTSP/1\\.0\\x20403\\x20Forbidden\\r\\nContent-Length: SF:\\x200\\r\\nServer:\\x20AirTunes/845\\.5\\.1\\r\\nCSeq:\\x2042\\x20OPTIONS\\r\\nX-A SF:pple-ProcessingTime:\\x201\\r\\nX-Apple-RequestReceivedTimestamp:\\x2010401 SF:787\\r\\n\\r\\n\"); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port9080-TCP:V=7.95%I=7%D=4/1%Time=67EB2828%P=arm-apple-darwin24.2.0%r( SF:GetRequest,9C,\"HTTP/1\\.0\\x20404\\x20Not\\x20Found\\r\\nContent-Length:\\x208 SF:5\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eNot\\x20Found\u003c SF:/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e404\\x20Not\\x20Found\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r(Gene SF:ricLines,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nContent-Length:\\x208 SF:9\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eBad\\x20Reques SF:t\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r( SF:HTTPOptions,9C,\"HTTP/1\\.0\\x20404\\x20Not\\x20Found\\r\\nContent-Length:\\x20 SF:85\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eNot\\x20Found SF:\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e404\\x20Not\\x20Found\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r(RTS SF:PRequest,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nContent-Length:\\x208 SF:9\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eBad\\x20Reques SF:t\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r( SF:RPCCheck,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nContent-Length:\\x208 SF:9\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eBad\\x20Reques SF:t\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r( SF:DNSVersionBindReqTCP,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nContent- SF:Length:\\x2089\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eB SF:ad\\x20Request\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request\u003c/h1\u003e\u003c/body\u003e SF:\u003c/html\u003e\")%r(DNSStatusRequestTCP,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\ SF:r\\nContent-Length:\\x2089\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003che SF:ad\u003e\u003ctitle\u003eBad\\x20Request\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request\u003c SF:/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r(Help,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nC SF:ontent-Length:\\x2089\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003chead\u003e\u003c SF:title\u003eBad\\x20Request\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request\u003c/h1\u003e SF:\u003c/body\u003e\u003c/html\u003e\")%r(SSLSessionReq,A2,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request SF:\\r\\nContent-Length:\\x2089\\r\\nContent-Type:\\x20text/html\\r\\n\\r\\n\u003chtml\u003e\u003ch SF:ead\u003e\u003ctitle\u003eBad\\x20Request\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Bad\\x20Request SF:\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")%r(TerminalServerCookie,A2,\"HTTP/1\\.0\\x20400\\x20Ba SF:d\\x20Request\\r\\nContent-Length:\\x2089\\r\\nContent-Type:\\x20text/html\\r\\n SF:\\r\\n\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eBad\\x20Request\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003e400\\x20Ba SF:d\\x20Request\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"); Service Info: Host: Welcome Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 18.70 seconds Timing\nThe following options can be used to control the speed of your Nmap scan.\n-T1-5 - Timing templates for adjusting your scan speed. These templates are categorized as Paranoid (0) | Sneaky (1) | Polite (2) | Normal (3) | Aggressive (4) | Insane (5).\nThe default is Normal (3). You may want to speed up your scan because you’re impatient (T5 - insane!) or slow it right down so that you don’t trip any filters that will give you a bad read (T0 - paranoid…).","nmap---network-mapper#NMAP - Network Mapper":""},"title":"nmap"},"/news/":{"data":{"":" RSS Feed "},"title":"_index"},"/tools/":{"data":{"":" Programming DaskParallel computing with task schedulingInfer.netInfer.NET is a framework for running Bayesian inference in graphical modelsJuliaThe Julia Programming LanguageKomputeGeneral purpose GPU compute framework built on Vulkan to support 1000s of cross vendor graphics cards (AMD, Qualcomm, NVIDIA \u0026 friends).MARSMars is a tensor-based unified framework for large-scale data computation which scales numpy, pandas, scikit-learn and Python functions.NumbaNumPy aware dynamic Python compiler using LLVMNumPyThe fundamental package for scientific computing with Python.NyokaNyoka is a Python library that helps to export ML models into PMML (PMML 4.4.1 Standard).PomegraneteFast, flexible and easy to use probabilistic modelling in PythonPyMC3Bayesian Modeling in Python with MCMC and VIPyroDeep universal probabilistic programming with Python and PyTorchPythonThe Python programming languageRStudio IDERStudio is an integrated development environment (IDE) for RSciPySciPy library main repositorySKIP LanguageA programming language to skip the things you have already computedStanStan development repository Machine Learning - Framework AutogenA programming framework for agentic AI.CandleMinimalist ML framework for RustLightGBMA fast, distributed, high performance gradient boosting (GBT, GBDT,GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking,classification and many other machine learning tasks.mahoutApache Mahout(TM) is a distributed linear algebra framework and mathematically expressive Scala DSL designed to let mathematicians, statisticians, and data scientists quickly implement their own algorithms.ML.NETML.NET is an open source and cross-platform machine learning framework for .NET.RayRay is a unified framework for scaling AI and Python applications.Ray consists of a core distributed runtime and a set of AI Libraries for accelerating ML workloads.ZenMLZenML 🙏: Build portable, production-ready MLOps pipelines. Machine Learning - Platform AlinkAlink is the Machine Learning algorithm platform based on Flink,developed by the PAI team of Alibaba computing platform.AngelA Flexible and Powerful Parameter Server for large-scale machine learningSystemdsAn open source ML system for the end-to-end data science lifecycleAxAdaptive Experimentation PlatformCortexProduction infrastructure for machine learning at scaleForestFlowForestFlow is a policy-driven Machine Learning Model ServerH203H2O is an Open Source, Distributed, Fast \u0026 Scalable Machine LearningKubeflowMachine Learning Toolkit for Kubernetesmetaflow🚀 Build and manage real-life data science projects with ease!MlflowOpen source platform for the machine learning lifecyclePredictionIOPredictionIO , a machine learning server for developers and ML engineers.Seldon-coreAn MLOps framework to package, deploy, monitor and manage thousands of production machine learning modelsVowpal WabbitVowpal Wabbit is a machine learning system which pushes the frontier of machine learning with techniques such as online, hashing, allreduce, reductions, learning2search, active, and interactive learning. Machine Learning - Library 1chipMLa library for numerical crunching and machine learning on microcontrollersautogluonAutoGluon: AutoML for Image, Text, Time Series, and Tabular DatacatboostA fast, scalable, high performance Gradient Boosting on Decision Trees library, used for ranking, classification, regression and other machine learning tasks for Python, R, Java, C++. Supports computation on CPU and GPU.Hyper-geometricHyper-geometric computational causality library for RustflashlightA C++ standalone library for machine learningMediaPipeCross-platform, customizable ML solutions for live and streaming mediamlpackmlpack: a fast, header-only C++ machine learning libraryNilearnMachine learning for NeuroImaging in PythonOpenCVOpen Source Computer Vision LibraryOpenNNOpenNN - Open Neural Networks LibraryPycareAn open-source, low-code machine learning library in PythonRecommendersBest Practices on Recommendation SystemsSapientMLGenerative AutoML for Tabular DataSciKit-learnscikit-learn: machine learning in PythonSonnetTensorFlow-based neural network libraryTransmogrifAITransmogrifAI (pronounced trăns-mŏgˈrə-fī) is an AutoML library for building modular, reusable, strongly typed machine learning workflows on Apache Spark with minimal hand-tuningXGBoostScalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for Python, R, Java, Scala, C++ and more. Runs on single machine, Hadoop, Spark, Dask, Flink and DataFlowxLearnHigh performance, easy-to-use, and scalable machine learning (ML) package, including linear model (LR), factorization machines (FM), and field-aware factorization machines (FFM) for Python and CLI interface. Deep Learning - Framework Apache SINGAa distributed deep learning platformChainerflexible framework of neural networks for deep learningCNTKMicrosoft Cognitive Toolkit (CNTK), an open source deep-learning toolkitDeepRecDeepRec is a high-performance recommendation deep learning framework based on TensorFlow. It is hosted in incubation in LF AI \u0026 Data Foundation.DyNetThe Dynamic Neural Network ToolkiteularA distributed graph deep learning frameworkMindSporeMindSpore is a new open source deep learning training/inference framework that could be used for mobile, edge and cloud scenariosMXNetLightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Scala, Go, Javascript and morencnnncnn is a high-performance neural network inference framework optimized for the mobile platformPaddlePaddlePArallel Distributed Deep LEarning: Machine Learning Framework from Industrial PracticePythiaA modular framework for vision \u0026 language multimodal research from Facebook AI Research (FAIR)PyTorchTensors and Dynamic neural networks in Python with strong GPU accelerationShaderNNShaderNN is a lightweight deep learning inference framework optimized for Convolutional Neural Networks on mobile platformsTensorflowAn Open Source Machine Learning Framework for Everyone Deep Learning - Platform DeepDetectDeep Learning API and Server in C++14 support for Caffe, PyTorch,TensorRT, Dlib, NCNN, Tensorflow, XGBoost and TSNEDeterminedDetermined is an open-source machine learning platform that simplifies distributed training, hyperparameter tuning, experiment tracking, and resource management. Works with PyTorch and TensorFlow.Jina☁️ Build multimodal AI applications with cloud-native stackOnepanelThe open source, end-to-end computer vision platform. Label, build, train, tune, deploy and automate in a unified platform that runs on any cloud and on-premises.PolyaxonMLOps Tools For Managing \u0026 Orchestrating The Machine Learning LifeCycleTonYTonY is a framework to natively run deep learning frameworks on Apache Hadoop.X-DeepLearningAn industrial deep learning framework for high-dimension sparse data Deep Learning - Library BigDLAccelerate LLM with low-bit (FP4 / INT4 / FP8 / INT8) optimizations using bigdl-llmCatalystAccelerated deep learning R\u0026DEclipse Deeplearning4jSuite of tools for deploying and training deep learning models using the JVM. Highlights include model import for keras, tensorflow, and onnx/pytorch, a modular and tiny c++ library for running math code and a java based math library on top of the core c++ library. Also includes samediff: a pytorch/tensorflow like library for running deep learning using automatic differentiation.fast.aiThe fastai deep learning libraryKerasDeep Learning for humansPyTorch IgniteHigh-level library to help with training and evaluating neural networks in PyTorch flexibly and transparently.PyTorch LightningDeep learning framework to train, deploy, and ship AI products Lightning fast.PyTorchVideoA deep learning library for video understanding research. Deep Learning - Library BeyondMLSoftware for developing sparse, performant, multitask artificial neural networksBoTorchBayesian optimization in PyTorchPyTorch BigGraphGenerate embeddings from large-scale graph-structured data.TVMOpen deep learning compiler stack for cpu, gpu and specialized accelerators Reinforcement Learning - Reinforcement Learning CleanRLHigh-quality single file implementation of Deep Reinforcement Learning algorithms with research-friendly features (PPO, DQN, C51, DDPG, TD3, SAC, PPG)DopamineDopamine is a research framework for fast prototyping of reinforcement learning algorithmsOpenAI GymA toolkit for developing and comparing reinforcement learning algorithms.PlaNetLearning Latent Dynamics for Planning from PixelsSEED RLSEED RL: Scalable and Efficient Deep-RL with Accelerated Central Inference. Implements IMPALA and R2D2 algorithms in TF2 with SEED’s architecture.Stable BaselinesA fork of OpenAI Baselines, implementations of reinforcement learning algorithms Data - Education DataPracticesDatapractices siteOpenDS4AllOpenDS4All project, hosted by LF AI \u0026 Data Data Lineage OpenBytesThis repo contains documentation related to the operation of the OpenBytes project.OpenDataologyBest practices for AI dataset metadata and license complianceOpenLineageAn Open Standard for lineage metadata collection Data Relational DB CouchDBSeamless multi-master syncing database with an intuitive HTTP/JSON API, designed for reliabilityMySQLMySQL Server, the world’s most popular open source database, and MySQL Cluster, a real-time, open source transactional databasePostgresMirror of the official PostgreSQL GIT repository. Note that this is just a mirror - we don’t work with pull requests on githubTiKVDistributed transactional key-value database, originally created to complement TiDB Data Store \u0026 Format AlluxioAlluxio, data orchestration for analytics and machine learning in the cloudApache IcebergApache IcebergApache ORCApache ORC - the smallest, fastest columnar storage for Hadoop workloadsAresDBA GPU-powered real-time analytics storage and query engine.ArrowApache Arrow is a multi-language toolbox for accelerated data interchange and in-memory processingAvroApache Avro is a data serialization system.CephCeph is a distributed object, block, and file storage platformDelta LakeAn open-source storage framework that enables building a Lakehouse architecture with compute engines including Spark, PrestoDB, Flink, Trino, and Hive and APIsDocarraryRepresent, send, store and search multimodal dataDruidApache Druid: a high performance real-time analytics database.HudiUpserts, Deletes And Incremental Processing on Big DataHugeGraphA graph database that supports more than 100+ billion data, high performance and scalability (Include OLTP Engine \u0026 REST-API \u0026 Backends)InfluxDBScalable datastore for metrics, events, and real-time analyticsJanusGraphJanusGraph: an open-source, distributed graph databaseLakeSoulLakeSoul is an end-to-end, realtime and cloud native Lakehouse framework with fast data ingestion, concurrent update and incremental data analytics on cloud storages for both BI and AI applications.MilvusA cloud-native vector database, storage for next generation AI applicationspandasFlexible and powerful data analysis / manipulation library for Python, providing labeled data structures similar to R data.frame objects, statistical functions, and much moreParquetApache ParquetPilosaA crazy fast analytical database, built on bitmaps. Perfect for ML applicationsStarRocksStarRocks is a next-gen sub-second MPP database for full analytics scenarios, including multi-dimensional analytics, real-time analytics and ad-hoc query.VEARCHA distributed system for embedding-based vector retrievalVespaThe open big data serving engine.VineyardVineyard (v6d) is an in-memory immutable data manager. Data Versioning dotmeshdotmesh (dm) is like git for your data volumes (databases, files etc) in Docker and KubernetesDVC🦉 ML Experiments Management with GitFastTrackMLExperiment tracking server focused on speed and scalabilityQuilt DataQuilt is a data mesh for connecting people with actionable data Data Operations AmundsenAmundsen is a metadata driven application for improving the productivity of data analysts, data scientists and engineers when interacting with data.Apache HiveApache HiveCKANCKAN is an open-source DMS (data management system) for powering data hubs and data portals. CKAN makes it easy to publish, share and use data. It powers catalog.data.gov, open.canada.ca/data, data.humdata.org among many other sites.DataHubThe Metadata Platform for the Modern Data StackDatashimA kubernetes based framework for hassle free handling of datasetsgreat_expectationsAlways know what to expect from your data.MathesarWeb application providing an intuitive user experience to databases.snorkelA system for quickly generating training data with weak supervision Data Feature Engineering FeastFeature Store for Machine LearningFeathrA scalable, unified data and AI engineering platform for enterpriseFeaturetoolsAn open source python library for automated feature engineeringOpenMLDBOpenMLDB is an open-source machine learning database that provides a feature platform computing consistent features for training and inference.tsfreshAutomatic extraction of relevant features from time series Data Stream Processing Apache RocketMQApache RocketMQ is a cloud native messaging and streaming platform, making it simple to build event-driven applications.BeamApache Beam is a unified programming model for Batch and Streaming data processing.faustPython Stream ProcessingFlinkApache FlinkFluentdFluentd: Unified Logging LayerKafkaMirror of Apache KafkaLogstashLogstash - transport and process your logs, events, or other dataNNStreamerNeural Network (NN) Streamer, Stream Processing Paradigm for Neural Network Apps/Devices.PravegaPravega - Streaming as a new software defined storage primitivePREFECTPrefect is a workflow orchestration tool empowering developers to build, observe, and react to data pipelinesPulsarApache Pulsar - distributed pub-sub messaging systemSamzaMirror of Apache SamzauReplicatorImprovement of Apache Kafka Mirrormaker Data SQL Engine Apache DrillApache Drill is a distributed MPP query layer for self describing dataHawqApache HAWQPrestoThe official home of the Presto distributed SQL query engine for big dataSQLFlowBrings SQL and AI together.TrinoOfficial repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL (https://trino.io) Data Visualization bokehInteractive Data Visualization in the browser, from PythonCarbonA design system built by IBMD3jsBring data to life with SVG, Canvas and HTML. 📊📈🎉dashData Apps \u0026 Dashboards for Python. No JavaScript Required.deck.glWebGL2 powered visualization frameworkeccoExplain, analyze, and visualize NLP language models. Ecco creates interactive visualizations directly in Jupyter notebooks explaining the behavior of Transformer-based language models (like GPT2, BERT, RoBERTA, T5, and T0).FacetsVisualizations for machine learning datasetsGrafanaThe open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, InfluxDB, Postgres and many more.MetabaseThe simplest, fastest way to get business intelligence and analytics to everyone in your companyPrometheusThe Prometheus monitoring system and time series database.RCloudCollaborative data analysis and visualizationredashMake Your Company Data Driven. Connect to any data source, easily visualize, dashboard and share your data.SupersetApache Superset is a Data Visualization and Data Exploration Platform Data Pipeline Management Analytics ZooDistributed Tensorflow, Keras and PyTorch on Apache Spark/Flink \u0026 RayApache OozieMirror of Apache Oozie "},"title":"Tools"}}